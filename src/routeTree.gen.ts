/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'
import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as QuenMatKhauRouteImport } from './routes/quen-mat-khau'
import { Route as ObsOverlayRouteImport } from './routes/obs-overlay'
import { Route as NhoMatKhauRouteImport } from './routes/nho-mat-khau'
import { Route as NganHangRouteImport } from './routes/ngan-hang'
import { Route as LyLichRouteImport } from './routes/ly-lich'
import { Route as KhoiPhucRouteImport } from './routes/khoi-phuc'
import { Route as KeToanRouteImport } from './routes/ke-toan'
import { Route as DangNhapRouteImport } from './routes/dang-nhap'
import { Route as DangKyRouteImport } from './routes/dang-ky'
import { Route as IndexRouteImport } from './routes/index'
import { Route as CommunityNganHangRouteImport } from './routes/community.ngan-hang'
import { Route as CommunityLyLichRouteImport } from './routes/community.ly-lich'
import { Route as CommunityKeToanRouteImport } from './routes/community.ke-toan'
import { Route as AuthGoogleOBSRouteImport } from './routes/auth.googleOBS'
import { Route as AuthCallbackRouteImport } from './routes/auth.callback'
import { ServerRoute as UploadFilesServerRouteImport } from './routes/uploadFiles'
import { ServerRoute as WebhookSepayServerRouteImport } from './routes/webhook.sepay'
import { ServerRoute as ApiTrpcSplatServerRouteImport } from './routes/api.trpc.$'

const RuntimeYoutubelivechatLazyRouteImport = createFileRoute(
  '/runtime/youtubelivechat',
)()
const RuntimeObsdonateLazyRouteImport = createFileRoute('/runtime/obsdonate')()
const rootServerRouteImport = createServerRootRoute()

const QuenMatKhauRoute = QuenMatKhauRouteImport.update({
  id: '/quen-mat-khau',
  path: '/quen-mat-khau',
  getParentRoute: () => rootRouteImport,
} as any)
const ObsOverlayRoute = ObsOverlayRouteImport.update({
  id: '/obs-overlay',
  path: '/obs-overlay',
  getParentRoute: () => rootRouteImport,
} as any)
const NhoMatKhauRoute = NhoMatKhauRouteImport.update({
  id: '/nho-mat-khau',
  path: '/nho-mat-khau',
  getParentRoute: () => rootRouteImport,
} as any)
const NganHangRoute = NganHangRouteImport.update({
  id: '/ngan-hang',
  path: '/ngan-hang',
  getParentRoute: () => rootRouteImport,
} as any)
const LyLichRoute = LyLichRouteImport.update({
  id: '/ly-lich',
  path: '/ly-lich',
  getParentRoute: () => rootRouteImport,
} as any)
const KhoiPhucRoute = KhoiPhucRouteImport.update({
  id: '/khoi-phuc',
  path: '/khoi-phuc',
  getParentRoute: () => rootRouteImport,
} as any)
const KeToanRoute = KeToanRouteImport.update({
  id: '/ke-toan',
  path: '/ke-toan',
  getParentRoute: () => rootRouteImport,
} as any)
const DangNhapRoute = DangNhapRouteImport.update({
  id: '/dang-nhap',
  path: '/dang-nhap',
  getParentRoute: () => rootRouteImport,
} as any)
const DangKyRoute = DangKyRouteImport.update({
  id: '/dang-ky',
  path: '/dang-ky',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const RuntimeYoutubelivechatLazyRoute =
  RuntimeYoutubelivechatLazyRouteImport.update({
    id: '/runtime/youtubelivechat',
    path: '/runtime/youtubelivechat',
    getParentRoute: () => rootRouteImport,
  } as any).lazy(() =>
    import('./routes/runtime.youtubelivechat.lazy').then((d) => d.Route),
  )
const RuntimeObsdonateLazyRoute = RuntimeObsdonateLazyRouteImport.update({
  id: '/runtime/obsdonate',
  path: '/runtime/obsdonate',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/runtime.obsdonate.lazy').then((d) => d.Route),
)
const CommunityNganHangRoute = CommunityNganHangRouteImport.update({
  id: '/community/ngan-hang',
  path: '/community/ngan-hang',
  getParentRoute: () => rootRouteImport,
} as any)
const CommunityLyLichRoute = CommunityLyLichRouteImport.update({
  id: '/community/ly-lich',
  path: '/community/ly-lich',
  getParentRoute: () => rootRouteImport,
} as any)
const CommunityKeToanRoute = CommunityKeToanRouteImport.update({
  id: '/community/ke-toan',
  path: '/community/ke-toan',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthGoogleOBSRoute = AuthGoogleOBSRouteImport.update({
  id: '/auth/googleOBS',
  path: '/auth/googleOBS',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthCallbackRoute = AuthCallbackRouteImport.update({
  id: '/auth/callback',
  path: '/auth/callback',
  getParentRoute: () => rootRouteImport,
} as any)
const UploadFilesServerRoute = UploadFilesServerRouteImport.update({
  id: '/uploadFiles',
  path: '/uploadFiles',
  getParentRoute: () => rootServerRouteImport,
} as any)
const WebhookSepayServerRoute = WebhookSepayServerRouteImport.update({
  id: '/webhook/sepay',
  path: '/webhook/sepay',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiTrpcSplatServerRoute = ApiTrpcSplatServerRouteImport.update({
  id: '/api/trpc/$',
  path: '/api/trpc/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dang-ky': typeof DangKyRoute
  '/dang-nhap': typeof DangNhapRoute
  '/ke-toan': typeof KeToanRoute
  '/khoi-phuc': typeof KhoiPhucRoute
  '/ly-lich': typeof LyLichRoute
  '/ngan-hang': typeof NganHangRoute
  '/nho-mat-khau': typeof NhoMatKhauRoute
  '/obs-overlay': typeof ObsOverlayRoute
  '/quen-mat-khau': typeof QuenMatKhauRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/auth/googleOBS': typeof AuthGoogleOBSRoute
  '/community/ke-toan': typeof CommunityKeToanRoute
  '/community/ly-lich': typeof CommunityLyLichRoute
  '/community/ngan-hang': typeof CommunityNganHangRoute
  '/runtime/obsdonate': typeof RuntimeObsdonateLazyRoute
  '/runtime/youtubelivechat': typeof RuntimeYoutubelivechatLazyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dang-ky': typeof DangKyRoute
  '/dang-nhap': typeof DangNhapRoute
  '/ke-toan': typeof KeToanRoute
  '/khoi-phuc': typeof KhoiPhucRoute
  '/ly-lich': typeof LyLichRoute
  '/ngan-hang': typeof NganHangRoute
  '/nho-mat-khau': typeof NhoMatKhauRoute
  '/obs-overlay': typeof ObsOverlayRoute
  '/quen-mat-khau': typeof QuenMatKhauRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/auth/googleOBS': typeof AuthGoogleOBSRoute
  '/community/ke-toan': typeof CommunityKeToanRoute
  '/community/ly-lich': typeof CommunityLyLichRoute
  '/community/ngan-hang': typeof CommunityNganHangRoute
  '/runtime/obsdonate': typeof RuntimeObsdonateLazyRoute
  '/runtime/youtubelivechat': typeof RuntimeYoutubelivechatLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dang-ky': typeof DangKyRoute
  '/dang-nhap': typeof DangNhapRoute
  '/ke-toan': typeof KeToanRoute
  '/khoi-phuc': typeof KhoiPhucRoute
  '/ly-lich': typeof LyLichRoute
  '/ngan-hang': typeof NganHangRoute
  '/nho-mat-khau': typeof NhoMatKhauRoute
  '/obs-overlay': typeof ObsOverlayRoute
  '/quen-mat-khau': typeof QuenMatKhauRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/auth/googleOBS': typeof AuthGoogleOBSRoute
  '/community/ke-toan': typeof CommunityKeToanRoute
  '/community/ly-lich': typeof CommunityLyLichRoute
  '/community/ngan-hang': typeof CommunityNganHangRoute
  '/runtime/obsdonate': typeof RuntimeObsdonateLazyRoute
  '/runtime/youtubelivechat': typeof RuntimeYoutubelivechatLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dang-ky'
    | '/dang-nhap'
    | '/ke-toan'
    | '/khoi-phuc'
    | '/ly-lich'
    | '/ngan-hang'
    | '/nho-mat-khau'
    | '/obs-overlay'
    | '/quen-mat-khau'
    | '/auth/callback'
    | '/auth/googleOBS'
    | '/community/ke-toan'
    | '/community/ly-lich'
    | '/community/ngan-hang'
    | '/runtime/obsdonate'
    | '/runtime/youtubelivechat'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dang-ky'
    | '/dang-nhap'
    | '/ke-toan'
    | '/khoi-phuc'
    | '/ly-lich'
    | '/ngan-hang'
    | '/nho-mat-khau'
    | '/obs-overlay'
    | '/quen-mat-khau'
    | '/auth/callback'
    | '/auth/googleOBS'
    | '/community/ke-toan'
    | '/community/ly-lich'
    | '/community/ngan-hang'
    | '/runtime/obsdonate'
    | '/runtime/youtubelivechat'
  id:
    | '__root__'
    | '/'
    | '/dang-ky'
    | '/dang-nhap'
    | '/ke-toan'
    | '/khoi-phuc'
    | '/ly-lich'
    | '/ngan-hang'
    | '/nho-mat-khau'
    | '/obs-overlay'
    | '/quen-mat-khau'
    | '/auth/callback'
    | '/auth/googleOBS'
    | '/community/ke-toan'
    | '/community/ly-lich'
    | '/community/ngan-hang'
    | '/runtime/obsdonate'
    | '/runtime/youtubelivechat'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DangKyRoute: typeof DangKyRoute
  DangNhapRoute: typeof DangNhapRoute
  KeToanRoute: typeof KeToanRoute
  KhoiPhucRoute: typeof KhoiPhucRoute
  LyLichRoute: typeof LyLichRoute
  NganHangRoute: typeof NganHangRoute
  NhoMatKhauRoute: typeof NhoMatKhauRoute
  ObsOverlayRoute: typeof ObsOverlayRoute
  QuenMatKhauRoute: typeof QuenMatKhauRoute
  AuthCallbackRoute: typeof AuthCallbackRoute
  AuthGoogleOBSRoute: typeof AuthGoogleOBSRoute
  CommunityKeToanRoute: typeof CommunityKeToanRoute
  CommunityLyLichRoute: typeof CommunityLyLichRoute
  CommunityNganHangRoute: typeof CommunityNganHangRoute
  RuntimeObsdonateLazyRoute: typeof RuntimeObsdonateLazyRoute
  RuntimeYoutubelivechatLazyRoute: typeof RuntimeYoutubelivechatLazyRoute
}
export interface FileServerRoutesByFullPath {
  '/uploadFiles': typeof UploadFilesServerRoute
  '/webhook/sepay': typeof WebhookSepayServerRoute
  '/api/trpc/$': typeof ApiTrpcSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/uploadFiles': typeof UploadFilesServerRoute
  '/webhook/sepay': typeof WebhookSepayServerRoute
  '/api/trpc/$': typeof ApiTrpcSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/uploadFiles': typeof UploadFilesServerRoute
  '/webhook/sepay': typeof WebhookSepayServerRoute
  '/api/trpc/$': typeof ApiTrpcSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/uploadFiles' | '/webhook/sepay' | '/api/trpc/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/uploadFiles' | '/webhook/sepay' | '/api/trpc/$'
  id: '__root__' | '/uploadFiles' | '/webhook/sepay' | '/api/trpc/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  UploadFilesServerRoute: typeof UploadFilesServerRoute
  WebhookSepayServerRoute: typeof WebhookSepayServerRoute
  ApiTrpcSplatServerRoute: typeof ApiTrpcSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/quen-mat-khau': {
      id: '/quen-mat-khau'
      path: '/quen-mat-khau'
      fullPath: '/quen-mat-khau'
      preLoaderRoute: typeof QuenMatKhauRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/obs-overlay': {
      id: '/obs-overlay'
      path: '/obs-overlay'
      fullPath: '/obs-overlay'
      preLoaderRoute: typeof ObsOverlayRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/nho-mat-khau': {
      id: '/nho-mat-khau'
      path: '/nho-mat-khau'
      fullPath: '/nho-mat-khau'
      preLoaderRoute: typeof NhoMatKhauRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ngan-hang': {
      id: '/ngan-hang'
      path: '/ngan-hang'
      fullPath: '/ngan-hang'
      preLoaderRoute: typeof NganHangRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ly-lich': {
      id: '/ly-lich'
      path: '/ly-lich'
      fullPath: '/ly-lich'
      preLoaderRoute: typeof LyLichRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/khoi-phuc': {
      id: '/khoi-phuc'
      path: '/khoi-phuc'
      fullPath: '/khoi-phuc'
      preLoaderRoute: typeof KhoiPhucRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ke-toan': {
      id: '/ke-toan'
      path: '/ke-toan'
      fullPath: '/ke-toan'
      preLoaderRoute: typeof KeToanRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dang-nhap': {
      id: '/dang-nhap'
      path: '/dang-nhap'
      fullPath: '/dang-nhap'
      preLoaderRoute: typeof DangNhapRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dang-ky': {
      id: '/dang-ky'
      path: '/dang-ky'
      fullPath: '/dang-ky'
      preLoaderRoute: typeof DangKyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/runtime/youtubelivechat': {
      id: '/runtime/youtubelivechat'
      path: '/runtime/youtubelivechat'
      fullPath: '/runtime/youtubelivechat'
      preLoaderRoute: typeof RuntimeYoutubelivechatLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/runtime/obsdonate': {
      id: '/runtime/obsdonate'
      path: '/runtime/obsdonate'
      fullPath: '/runtime/obsdonate'
      preLoaderRoute: typeof RuntimeObsdonateLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/community/ngan-hang': {
      id: '/community/ngan-hang'
      path: '/community/ngan-hang'
      fullPath: '/community/ngan-hang'
      preLoaderRoute: typeof CommunityNganHangRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/community/ly-lich': {
      id: '/community/ly-lich'
      path: '/community/ly-lich'
      fullPath: '/community/ly-lich'
      preLoaderRoute: typeof CommunityLyLichRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/community/ke-toan': {
      id: '/community/ke-toan'
      path: '/community/ke-toan'
      fullPath: '/community/ke-toan'
      preLoaderRoute: typeof CommunityKeToanRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/googleOBS': {
      id: '/auth/googleOBS'
      path: '/auth/googleOBS'
      fullPath: '/auth/googleOBS'
      preLoaderRoute: typeof AuthGoogleOBSRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/callback': {
      id: '/auth/callback'
      path: '/auth/callback'
      fullPath: '/auth/callback'
      preLoaderRoute: typeof AuthCallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/uploadFiles': {
      id: '/uploadFiles'
      path: '/uploadFiles'
      fullPath: '/uploadFiles'
      preLoaderRoute: typeof UploadFilesServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/webhook/sepay': {
      id: '/webhook/sepay'
      path: '/webhook/sepay'
      fullPath: '/webhook/sepay'
      preLoaderRoute: typeof WebhookSepayServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/trpc/$': {
      id: '/api/trpc/$'
      path: '/api/trpc/$'
      fullPath: '/api/trpc/$'
      preLoaderRoute: typeof ApiTrpcSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DangKyRoute: DangKyRoute,
  DangNhapRoute: DangNhapRoute,
  KeToanRoute: KeToanRoute,
  KhoiPhucRoute: KhoiPhucRoute,
  LyLichRoute: LyLichRoute,
  NganHangRoute: NganHangRoute,
  NhoMatKhauRoute: NhoMatKhauRoute,
  ObsOverlayRoute: ObsOverlayRoute,
  QuenMatKhauRoute: QuenMatKhauRoute,
  AuthCallbackRoute: AuthCallbackRoute,
  AuthGoogleOBSRoute: AuthGoogleOBSRoute,
  CommunityKeToanRoute: CommunityKeToanRoute,
  CommunityLyLichRoute: CommunityLyLichRoute,
  CommunityNganHangRoute: CommunityNganHangRoute,
  RuntimeObsdonateLazyRoute: RuntimeObsdonateLazyRoute,
  RuntimeYoutubelivechatLazyRoute: RuntimeYoutubelivechatLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  UploadFilesServerRoute: UploadFilesServerRoute,
  WebhookSepayServerRoute: WebhookSepayServerRoute,
  ApiTrpcSplatServerRoute: ApiTrpcSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()

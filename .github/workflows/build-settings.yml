name: OBS_Mylenti

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Setup Bun
        run: |
          if [ "${{ runner.os }}" = "Windows" ]; then
            iwr https://bun.sh/install.ps1 -UseBasicParsing | iex
            echo "$HOME\.bun\bin" >> $env:GITHUB_PATH
          else
            curl -fsSL https://bun.sh/install | bash
            echo "$HOME/.bun/bin" >> $GITHUB_PATH
          fi

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: |
          pip install pyinstaller flask flask-cors
          pip install git+https://github.com/nguyenvulebinh/VietVoice-TTS.git

      - name: Run Python build script
        run: python src-tauri/python/build.py

      - name: Install Tauri CLI
        run: bun add -d @tauri-apps/cli

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y libwebkit2gtk-4.0-dev build-essential curl wget libssl-dev libgtk-3-dev

      - name: Build Tauri app
        run: bun tauri build

      - name: Generate SHA256 checksums
        run: |
          mkdir -p checksums
          find src-tauri/target/release/bundle -type f \( -name "*.msi" -o -name "*.AppImage" -o -name "*.deb" -o -name "*.rpm" -o -name "*.dmg" \) \
            -exec sha256sum {} \; > checksums/sha256-${{ runner.os }}.txt

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.os }}
          path: |
            src-tauri/target/release/bundle/**/*.msi
            src-tauri/target/release/bundle/**/*.AppImage
            src-tauri/target/release/bundle/**/*.deb
            src-tauri/target/release/bundle/**/*.rpm
            src-tauri/target/release/bundle/**/*.dmg
            src-tauri/bin/donate_voice.exe
            checksums/sha256-${{ runner.os }}.txt

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: downloads

      - name: Combine SHA256 files
        run: |
          mkdir -p final
          cat downloads/**/sha256-*.txt > final/sha256.txt

      - name: Format SHA256 as Markdown table
        id: format
        run: |
          echo "table<<EOF" >> $GITHUB_OUTPUT
          echo "| File | SHA256 |" >> $GITHUB_OUTPUT
          echo "|------|--------|" >> $GITHUB_OUTPUT
          awk '{printf "| %s | %s |\n", $2, $1}' final/sha256.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v3
        with:
          configuration: .github/changelog-config.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ${{ steps.changelog.outputs.changelog }}

            ## üîê SHA256 Checksums
            ${{ steps.format.outputs.table }}
          files: downloads/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

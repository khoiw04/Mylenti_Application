name: OBS_Mylenti

on:
  push:
    tags:
      - 'v*' # Tự động chạy khi push tag như v1.0.0
  workflow_dispatch:
  release:
    types: [published]

jobs:
  create-release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Generate changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v3
        with:
          configuration: .github/changelog-config.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release with changelog
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false

  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    needs: create-release
    steps:
      - uses: actions/checkout@v3

      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install Bun
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            iwr https://bun.sh/install.ps1 -UseBasicParsing | iex
            echo "$HOME\.bun\bin" >> $env:GITHUB_PATH
          else
            curl -fsSL https://bun.sh/install | bash
            echo "$HOME/.bun/bin" >> $GITHUB_PATH
          fi

      - name: Install Tauri CLI
        run: bun add -d @tauri-apps/cli

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y libwebkit2gtk-4.0-dev build-essential curl wget libssl-dev libgtk-3-dev

      - name: Install Python (optional)
        if: runner.os != 'Windows'
        run: |
          python3 -m pip install --upgrade pip
          pip install -r requirements.txt || true

      - name: Build Tauri app
        run: bun tauri build

      - name: Upload to Release
        uses: softprops/action-gh-release@v1
        if: github.event_name == 'release' || startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            src-tauri/target/release/bundle/**/*.msi
            src-tauri/target/release/bundle/**/*.AppImage
            src-tauri/target/release/bundle/**/*.deb
            src-tauri/target/release/bundle/**/*.rpm
            src-tauri/target/release/bundle/**/*.dmg
